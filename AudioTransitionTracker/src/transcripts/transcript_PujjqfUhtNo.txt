





timestamp 6: hello everyone
timestamp 7: welcome back to this wonderful journey

timestamp 9: of computer organization

timestamp 11: and architecture in this session we will


timestamp 14: be focusing on memory
timestamp 15: so let's get to learning wikipedia


timestamp 18: states
timestamp 19: memory is the faculty of brain by which


timestamp 22: data or
timestamp 23: information is encoded stored and


timestamp 26: retrieved when needed similarly in case of


timestamp 29: computers
timestamp 30: memory which was initially termed as

timestamp 32: store plays a similar role

timestamp 34: everything be it an image an audio file



timestamp 38: a text file or instructions for a key

timestamp 40: press
timestamp 41: or a mouse click if that is stored in

timestamp 43: the computer memory

timestamp 45: it's actually encoded as bits basically


timestamp 48: each memory cell can have either zero or


timestamp 51: one
timestamp 52: and all these are comprised of millions


timestamp 55: of bits and processed by the processor the


timestamp 58: brain of the computer

timestamp 60: so we might think that having a single

timestamp 62: large memory unit

timestamp 64: is the solution to the situation but i'm

timestamp 66: afraid
timestamp 67: it's not with the increasing size of the

timestamp 69: memory
timestamp 70: the time to access them gets increased


timestamp 73: and time is the essence here let me put it


timestamp 76: to you this way
timestamp 77: we know the processor is very fast i


timestamp 80: mean today we have gigahertz processors

timestamp 82: even in our smartphones

timestamp 84: suppose we have 2 gigahertz processor

timestamp 86: this means
timestamp 87: the frequency is 2 gigahertz hence time


timestamp 90: is 1 upon frequency that is 1 by 2 into 10



timestamp 94: to the power 9.
timestamp 95: now how did i get this 10 to the power 9


timestamp 98: let's have a chart
timestamp 99: shall we we know one kilo unit equals to


timestamp 102: 1000 units hence 10 cube units



timestamp 106: therefore one mega unit is 1 000 kilo


timestamp 109: units and thus
timestamp 110: 10 to the power 6 units and finally 1


timestamp 113: giga
timestamp 114: units is 1 000 mega units and thus 10 to


timestamp 117: the power 9 units
timestamp 118: now coming back to our initial

timestamp 120: illustration 1 upon 2 into 10 to the


timestamp 123: power 9 seconds equals to 1 by 2 into 10 to the



timestamp 127: power minus 9 seconds
timestamp 128: and 10 to the power minus 9 seconds is 1


timestamp 131: nanosecond
timestamp 132: therefore in half a nanosecond our


timestamp 135: processor can perform a single task

timestamp 137: so to conclude the cpu is fast not



timestamp 141: only fast real fast and keeping up with


timestamp 144: this kind of speed
timestamp 145: is tough because if our memory device is


timestamp 148: way slower than the cpu

timestamp 150: then the cpu will remain idle for the

timestamp 152: most of the time and we won't have an

timestamp 154: efficient machine also not only the


timestamp 157: speed
timestamp 158: the size and the cost are considered to


timestamp 161: when it comes to memory that's why we


timestamp 164: have various memory devices

timestamp 166: associated to our computer computer

timestamp 168: designers termed the memory to perform


timestamp 171: immediate tasks as
timestamp 172: primary memory and the memory which is


timestamp 175: used as a more permanent storage

timestamp 177: is known as secondary memory when we


timestamp 180: play an audio file our system manager


timestamp 183: that is the operating system manages the


timestamp 186: space within the primary memory

timestamp 188: to perform the instructions which is


timestamp 191: understanding the mouse click

timestamp 193: opening up the default application for

timestamp 195: playing the file

timestamp 197: after bringing it from the secondary

timestamp 199: storage into the primary memory


timestamp 202: now as because we need the execution of

timestamp 204: the instructions to be as
timestamp 205: quick as possible the sales in the


timestamp 208: primary memory can be accessed in any

timestamp 210: order and that's why the name

timestamp 212: random access memory or ram to be


timestamp 215: precise
timestamp 216: it's actually dynamic ram because in

timestamp 218: each memory chip

timestamp 220: there is a transistor with which a

timestamp 222: capacitor is associated

timestamp 224: the transistors can retain the binary

timestamp 226: bit as long as the associated capacitors


timestamp 229: have charge
timestamp 230: so periodic recharging is needed for


timestamp 233: value retention and that's why it's

timestamp 235: called dynamic but it's still slow for


timestamp 238: the modern day processors

timestamp 240: so we opt for another fast memory

timestamp 242: storage
timestamp 243: the cache now the cache is made up of

timestamp 245: static ram which doesn't have any

timestamp 247: capacitors
timestamp 248: but they are very costly in comparison


timestamp 251: to the main or primary memory however cache happens



timestamp 255: to be the fastest memory storage

timestamp 257: among all others anyway all these


timestamp 260: be that cache or main memory are


timestamp 263: volatile
timestamp 264: that means they can only retain the data


timestamp 267: in them until the power is off

timestamp 269: therefore to store the data more

timestamp 271: permanently
timestamp 272: we opt for the next type of memory

timestamp 274: storage the

timestamp 276: secondary memory now secondary memories


timestamp 279: are slower than the main memory

timestamp 281: yet they can retain data permanently


timestamp 284: that is the data inside them are still

timestamp 286: there
timestamp 287: even if the power is off they are larger


timestamp 290: in terms of capacity
timestamp 291: also they are cheaper than the main

timestamp 293: memory we will definitely get into the


timestamp 296: detailed study of various types of

timestamp 298: secondary memories
timestamp 299: in our due course but for the time being

timestamp 301: i would like to take an example

timestamp 303: of one of the most popular secondary

timestamp 305: storage devices that is the hard disk

timestamp 307: drive
timestamp 308: to explain one of the reasons why these

timestamp 310: are slower compared to the main memory

timestamp 312: for a hard disk drive the axis is


timestamp 315: semi-random
timestamp 316: now why is so because using this


timestamp 319: red right head we can randomly get to


timestamp 322: any of these
timestamp 323: tracks but from there getting to the

timestamp 325: particular block where the data is

timestamp 327: stored
timestamp 328: requires sequential movement so the time


timestamp 331: to access
timestamp 332: any data in the hard disk drive becomes

timestamp 334: longer
timestamp 335: naturally now let me show you the big


timestamp 338: picture
timestamp 339: we have the processor and it has got its

timestamp 341: registers but these are not capable of

timestamp 343: storing large amount of data

timestamp 345: to be really honest they can barely

timestamp 347: store a single instruction
timestamp 348: so we opt for main memory yet main


timestamp 351: memory is also slow for the processor

timestamp 353: so we stored the frequently accessed


timestamp 356: stuffs in a smaller
timestamp 357: yet faster than main memory speed memory


timestamp 360: storage
timestamp 361: the cache it's like keeping our phones

timestamp 363: in our pockets

timestamp 365: instead of the backpack that we are

timestamp 367: carrying because we tend to use the
timestamp 368: phone very frequently

timestamp 370: now the main memory and the cachet

timestamp 372: communicates using data word or block


timestamp 375: and the ways the communication takes

timestamp 377: place is known as
timestamp 378: cache memory mapping worry not we will


timestamp 381: learn every type of these in details


timestamp 384: later so having this organization


timestamp 387: does speed things up a notch but none of


timestamp 390: these retain data permanently so we need a


timestamp 393: permanent
timestamp 394: non-volatile storage the secondary

timestamp 396: memory
timestamp 397: using the virtual memory mapping

timestamp 399: technique the operating system lets the

timestamp 401: main memory
timestamp 402: and the auxiliary secondary storage

timestamp 404: communicate with one another

timestamp 406: using pages for this to happen the


timestamp 409: operating system must be capable of

timestamp 411: performing
timestamp 412: paging or demand paging fun fact


timestamp 415: the processor is aware of the presence

timestamp 417: of the registers the caches

timestamp 419: even the main memory but it has got no


timestamp 422: clue about the existence of the secondary

timestamp 424: memory there

timestamp 426: the operating system comes at rescue and

timestamp 428: manages all the things

timestamp 430: so to conclude having a single large


timestamp 433: memory is not really a solution

timestamp 435: instead we use different types of

timestamp 437: storage units
timestamp 438: in an organized fashion so



timestamp 442: that was all for this session in the

timestamp 444: next one we will get into the details of

timestamp 446: these memory storages and learn about

timestamp 448: the memory hierarchy

timestamp 450: hope to see you in the next one thank

timestamp 452: you all for watching











timestamp 464: you
